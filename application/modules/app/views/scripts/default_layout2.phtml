<!--  THIS LAYOUT IS FOR THE MULTIPLE PAGES-->
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8"/>

        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
        <meta http-equiv="imagetoolbar" content="no"/>

        <meta http-equiv="Content-Language" content="en"/>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

        <meta name="description" content="Fancrank Inc."/>
        <meta name="viewport" content="width=device-width,initial-scale=1"/>

        <meta name="author" content="FanCrank" />
        <meta name="generator" content="" />
        <meta name="description" content="" />
        <meta name="keywords" content="" />
        <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />

        <script src="/js/libs/jquery-1.7.2.min.js"></script>
		<script src="/js/libs/jquery-ui-1.8.21.custom.min.js"></script>
    	<script src="/js/libs/modernizr-2.5.3.min.js"></script>
        <script src="/bootstrap/js/bootstrap.min.js"></script>
        <script src="//connect.facebook.net/en_US/all.js"></script>
        
	    <!-- This following javascripts are used to initialize the iframe look and feel -->
		<script>
			var baseAppUrl = "<?= $this->url() ?>";
			var serverUrl = "<?= $this->fullServerUrl()?>";
			var appId = "<?= $this->layout()->appKey ?>";
			var userId = "<?= $this->user_id ?>";
			var accessToken = "<?= $this->access_token ?>";
			var fanpageId = "<?= $this->fanpage_id?>"	;	
			var userAccessToken = "<?= $this->facebook_user_access_token?>";
			//alert( accessToken);
			window.fbAsyncInit = function() {
				FB.init({
					 appId  : appId,
					 status : true, // check login status
					 cookie : true, // enable cookies to allow the server to access the session
					 xfbml  : true// parse XFBML
				});
				FB.Canvas.setAutoResize(10);
			
				//FB.Canvas.setSize();
			};

		 </script>
	 	<!-- End of iframe initialization -->
        <script src="/js/fancrank.js"></script>

        <?= $this->headScript(); ?>

        <? if (APPLICATION_ENV == 'development'): ?>
			
			<?php if ($this->color_choice == 1) {?>
            <link href="/css/loadstyle1.less" rel="stylesheet/less" id="stylesheet"/>
            <?}elseif($this->color_choice == 2){?>
             <link href="/css/loadstyle2.less" rel="stylesheet/less" id="stylesheet"/>
               <?}elseif($this->color_choice == 4){?>
             <link href="/css/loadstyle4.less" rel="stylesheet/less" id="stylesheet"/>
               <?}elseif($this->color_choice == 5){?>
             <link href="/css/loadstyle5.less" rel="stylesheet/less" id="stylesheet"/>
            <? } else {?>
            <link href="/css/loadstyle3.less" rel="stylesheet/less" id="stylesheet"/>
            
            <? }?>
            <script type="text/javascript">
                env = 'development';

                less = {};
                less.env = 'development';

            </script>
            <script src="/js/libs/less-1.3.0.min.js"></script>
        <? else: ?>
             <link href="/css/style.css" rel="stylesheet" type="text/css"/>
        <? endif ?>

        <style>
            .container, .navbar-fixed-top .container {
                width: 810px;
            }
        </style>
       
    </head>

    <body style="overflow:hidden;" controller="<?= $this->layout()->controller ?>" action="<?= $this->layout()->action ?>" module="app">

		<div class="container" role="main"> 
			<div id="wrapper">
	
				<div id="header">
			    
			    	<div id="logo"></div>
			        
			    </div><!--/end header -->
			    
			    <div id="content">
			   	    	
			    
				<div class="user-profile">
								
	        					<div class="top-border"> <a class="closeProfile" href="#" onclick="closeProfile()"></a> </div>
	        					<div class="bottom-border"> </div>
	        					<div class="profile-content">
	        						
	        					
	        					
	        					</div>
	        	</div>
			    	<div class="container">

			    		
						<div class="tabbable">   
						    <ul class="nav nav-tabs" id="pageTabs">
								<li class="active" ><a href="#news-feed" data-toggle="tab" id="newsfeed-tab" >News Feed</a></li>
								<li><a href="#top-fans" data-toggle="tab"  id="topfans-tab">Top Fans</a></li>
								<li><a href="#profile" data-toggle="tab"  id="profile-tab">My Profile</a></li>
								<li><a href="#achievements" data-toggle="tab"  id="achievements-tab">Achievements</a></li>
							</ul>
							    <a href="#" onclick="colorChange(1)">Grayscale</a>
							    <a href="#" onclick="colorChange(2)">Bubblegum</a>
							    <a href="#" onclick="colorChange(3)">Original</a>
							    <a href="#" onclick="colorChange(4)">Autumn</a>
							    <a href="#" onclick="colorChange(5)">Ocean</a>
							    <a href="#" onclick="colorChange(6)">Red</a>
							    <div id="logoutBtn">
										<a href="/app/app/logout/<?= $this->fanpage_id ?>">Logout</a>
				    			</div>
				    					
				    		<div class="tab-content">
				    				<div class="tab-pane active" id="news-feed">
	        							
	        						</div>
	        						<div class="tab-pane" id="top-fans">
	        						</div>
	        						<div class="tab-pane" id="profile">
	        						</div>
	        						<div class="tab-pane" id="achievements">
	        						</div>
	        						
	        				</div>
	        				 <div id="powered"><br/> POWERED BY <br/><img src ="/img/logo3.png" /> </div>
	        			</div>
	        			
	        		</div>
        	
        		</div>
        	</div>
         </div>
         <div class="light-box"></div>
        
        <div id="fb-root"></div>
    </body>
    <script>

$tfb = false;
$ffb = false;
$ttb = false;
$tcb = false;

	$('#top-fans-btn').live('click', function() {
		
		if (($tfb)==true){
		$('#top-fans-btn').text('- Close');
		}else{
			$('#top-fans-btn').text("+ More");
		}
		$tfb = !$tfb;
	})
	
	$('#fan-favorite-btn').live( 'click', function() {
		if (($ffb)==true){
		$('#fan-favorite-btn').text('- Close');
		}else{
			$('#fan-favorite-btn').text("+ More");
		}
		$ffb = !$ffb;
	})
	
	$('#top-talker-btn').live( 'click', function() {
		if (($ttb)==true){
		$('#top-talker-btn').text('- Close');
		}else{
			$('#top-talker-btn').text("+ More");
		}
		$ttb = !$ttb;
	})
	
	$('#top-clicker-btn').live( 'click', function() {
		if (($tcb)==true){
		$('#top-clicker-btn').text('- Close');
		}else{
			$('#top-clicker-btn').text("+ More");
		}
		$tcb = !$tcb;
	})


    
    function closeProfile(){
    	$('.light-box').css('display','none');
		$('.user-profile').css('display', 'none');
		//$('.top-border').css('top','350px');
		//$('.bottom-border').css('top','350px');
		$('.profile-content').css('top','350px');
		//$('.top-border').css('display','none');
		//$('.bottom-border').css('display','none');
		$('.profile-content').css('display','none');
		$('.profile-content').css('height','660px');


		if($('#news-feed').hasClass('active')){
			getTopPost();
			getFancrankfeed('all');
			
			//alert("top class reload");
		}
		
		if($('#top-fans').hasClass('active')){
			getTopfans('#top-fans');
			getLatestPost();
			
			//alert("top class reload");
		}
    	$('.profile-content').html('');
    	$('#moreComment').removeAttr('postid');
    	
		
    }
    
	$('.light-box').click(function(){
		closeProfile();
	});

	$('#newsfeed-tab').click(function(){
		getNewsfeed('#news-feed');
		$('#top-fans').html('');
		$('#profile').html('');
		$('#achievements').html('');
		
	
		//alert('getting top posts');
	
		
	});
	
	$('#topfans-tab').click(function(){
		getTopfans('#top-fans');
	
		$('#profile').html('');
		$('#achievements').html('');
		$('#newsfeed').html('');
		//$('.bubble').html('');
		
	});
    
	$('#profile-tab').click(function(){
	
		 getMyProfile('#profile');
		 $('#top-fans').html('');
		 $('#achievements').html('');
		 $('#newsfeed').html('');

	});

	$('#achievements-tab').click(function(){
		getAwards('#achievements') 
		$('#top-fans').html('');
		$('#profile').html('');
		$('#newsfeed').html('');
	
		
	});
	
	
	
	function userProfile(user){
		getUserProfile('.profile-content', user);
		
		$('.light-box').css('display','block');
		$('.user-profile').css('display', 'block');
			/*
		$('.top-border').animate({
		    height: 'toggle',
			top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });
	
		$('.bottom-border').animate({
		    height: 'toggle',
		    top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });
		  */
		
		
		  
		$('.profile-content').animate({
			height:'toggle',
			top:'20px'
		   },500, function(){
			   
		});
	
	}

	function comment_bubble(post_id, limiter){
		
		getBubbleComment('.profile-content', post_id, limiter);
		$('.light-box').css('display','block');
		$('.user-profile').css('display', 'block');
	
		/*$('.top-border').animate({
		    height: 'toggle',
			top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });
	
		$('.bottom-border').animate({
		    height: 'toggle',
		    top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });*/
			$('.profile-content').css('height', 'auto');
		//$('.profile-content').css('height', '1100px');
		$('.profile-content').animate({
			height:'toggle',
			top:'20px'
		   },500, function(){
			   
		});
	}

	function comment_feed(post_id, limiter, total, toggle){
		ui = '#post_' + post_id;
		//alert(ui);
		getFeedComment( ui, post_id,limiter, total, toggle);

		//$('.light-box').css('display','block');
		//$('.user-profile').css('display', 'block');
	
		/*$('.top-border').animate({
		    height: 'toggle',
			top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });
	
		$('.bottom-border').animate({
		    height: 'toggle',
		    top: '0px'
		  }, 1000, function() {
		    // Animation complete.
		  });*/
		
	}
	

	 $(document).ready(function() {
		 FB.api(fanpageId , function(response){
			 if (!response || response.error) {
			 	
		 	 }else{
			 	 	try{
			 	 		var x = -1*(parseInt(response.cover.offset_y) + 50);
			 	 	}catch(err){
						var x = 0;
			 	 	}
			 	 	//alert(x);
			 	 	try{
			 		$('#logo').html('<img src =" ' + response.cover.source + '"style=" top:'+ x +'px" />' );
			 	 	}catch(err){
						
				 	}
			 }



		 
	 	});
		//alert('getting top posts');
		getNewsfeed('#news-feed');
		
	 });

	 
  /*  $(document).ready(function() {

    	var tabs = $( "#pageTabs" ).tabs({
    		load: function(event, ui) {
    			$(ui.panel).delegate('a', 'click', function(event) {
    					$(ui.panel).load(this.href);
    					event.preventDefault();
    				});
    			}
    		});

   
	$(document).ready(function() {		
    		$('#pageTabs').bind('tabsselect', function(event, ui) {
    			$('#pageTabs a').removeAttr('id');
    			$(ui.tab).attr('id', 'currentPageTab').css({'outline': 'none'});
    			
    			//var url = $.data(ui.tab, 'load.tabs');
    			
    		});
    	});*/

	
	function getUserProfile(ui, target) {
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/userprofile/'+ fanpageId +'/?target=' + target + '&facebook_user_id='+ userId,
			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
		
				$(ui).html(data);
				
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});
	
	}


	function getFeedComment(ui, post_id, limiter, total, toggle){
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/fancrankfeedcomment/'+ fanpageId + '?post_id=' +post_id + '&limit=' + limiter + '&total=' +total + '&access_token=' + accessToken,

			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
			
				$(ui).html(data);
				
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});


		//alert('are we animating?' + toggle);
		if(toggle){
			$(ui).animate({
			    height: 'toggle',
			
			  }, 1000, 'swing', function() {
			    // Animation complete.
			  });
			  
		}else{
			//alert('hurray it didnt f-ing close');
		}
		

		
		
	}

	
		
	function getBubbleComment(ui, post_id,limiter) {
		      
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/comment' ,
			dataType: "html",
			cache: false,
			success: function( data ) {
				$(ui).html(data);
				
				 FB.api(post_id ,  function(response){
			    	   if (!response || response.error) {
			    		    //alert('Error occured');
			    		  } else {
			    		    //alert(response.from.id);
				    		
			    			$('#post_img').html("<img id='post_img' class='face' width='30' height='30' src='https://graph.facebook.com/" + response.from.id + "/picture' />");
			    			$('#post_message').html('<div class="name"><a href="">' + response.from.name + '</a></div>' + response.message);

							$('#comment_').attr('id', 'comment_' + response.id );
							$('#popup_comment_button').attr('onclick', 'commentSubmit("' + response.id + '", "comment_' + response.id + '")' );

							var like;
							try {
								like = response.likes.count;
								
							}catch(err){
								like=0;
							}
							$('#first_like').attr('onclick', 'like('+response.id+', '+response.type+')' );
							$('#post_like').html(like);
							i=0;
							if (like != 0){
								for(i=0; i< response.likes.data.length; i++){
									if (response.likes.data[i].id == userId){
										$('#first_like').html('Unlike');
										$('#first_like').attr('onclick', 'unlike('+response.id+', '+response.type+')' );
									}
								}

							}
							
							var d = new Date(Date.parse(response.created_time));
							//alert(d);
							$('#post_date').html(d.toDateString());	
							//alert(response.comments.data.length);
							try{
								var limit = response.comments.data.length;
							}catch(err){
								var limit = 0;
							}
						//	alert(limit);
							if(limiter < limit){
								limit = limiter;
							}
							//alert(limit);
							//alert(limiter);
							for (i=0;i<limit; i++){	
								//alert(i);
								d = new Date(Date.parse(response.comments.data[i].created_time));
								//alert(d);
								//alert(html);
								var likeC = response.comments.data[i].likes;

								if (likeC==undefined){
									likeC=0;
								}
								
								//alert(likeC);
								
								$('#post-list').append(
									'<li class="grey-light"><div class="photo"><a href=""><img class="face" width="30" height="30" src="https://graph.facebook.com/' 
									+ response.comments.data[i].from.id+ '/picture"></a></div><div class="post"><div class="name"><a href="">' 
									+ response.comments.data[i].from.name + '</a></div>' + response.comments.data[i].message + 
									'</div><div class="social">' + likeC + '<a href="#" class="likes">Like</a>  Posted on <span class="date"> '
									+ d.toDateString() + '</span></div></li><br/>' 
									);			
							}
							try{
								var limit = response.comments.data.length;
							}catch(err){
								var limit = 0;
							}
							if (limiter < limit){
								$('#moreComments').html('More +');
								$('#moreComments').attr('postid', post_id );
								$('#moreComments').attr('loaded', 5);
							}
			    		  }
			 	});
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				//console.log(xhr.statusText, errorMessage);
			}
		});
	}


	$('#moreComments').live('hover',function(){
		FB.api( $('#moreComments').attr('postid')+'/comments?limit=10&offset=' + $('#moreComments').attr('loaded') ,  function(response){
	    	   if (!response || response.error) {
	    		    alert('Error occured');
	    		  } else {
	    		    //alert(response.from.id);
		    		
	    			var limiter=10;
	    			try{
						var limit = response.data.length;
	    			}catch(err){
						var limit = 0;
	    			}

						//	alert(limit);
					if(limiter < limit){
						limit = limiter;
					}
					//alert(limit);
					//alert(limiter);
					for (i=0;i<limit; i++){	
						//alert(i);
						d = new Date(Date.parse(response.data[i].created_time));
						//alert(d);
						//alert(html);
						$('#post-list').append(
							'<li class="grey-light"><div class="photo"><a href=""><img class="face" width="30" height="30" src="https://graph.facebook.com/' 
							+ response.data[i].from.id+ '/picture"></a></div><div class="post"><div class="name"><a href="">' 
							+ response.data[i].from.name + '</a></div>' + response.data[i].message + 
							'</div><div class="social">' + '<a href="#" class="likes">Like</a>  Posted on <span class="date"> '
							+ d.toDateString() + '</span></div></li><br/>' 
							);			
					}

					var x = parseInt($('#moreComments').attr('loaded')) + 10;
					$('#moreComment').removeAttr('loaded');
					$('#moreComments').attr('loaded', x );
					//alert(response.data.length);
					//alert(limiter);


					try{
						var limit = response.data.length;
	    			}catch(err){
						var limit = 0;
	    			}
					if (limiter < limit){
						$('#moreComments').html('More +');
						$('#moreComments').attr('postid', post_id );						
					}else{
						$('#moreComments').html('');
					}
	    		  }
	 	});
	});	
	
	
	function getNewsfeed(ui) {
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/newsfeed/'+ fanpageId +'?facebook_user_id=' + userId,
			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
				$(ui).html(data);
				getFancrankfeed('all');
				getTopPost();
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});
	}

	function getTopPost(){
		//alert('getting top postsss');
		ui = '#toppost';
		
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/gettoppost/'+ fanpageId , 
			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
		
				$(ui).html(data);
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});
	}

	function getLatestPost(){
		//alert('getting top postsss');
		ui = '#latestpost';
		$.ajax({
			type: "GET",
			url:  serverUrl +'/app/app/getlatestpost/'+ fanpageId,  
			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
				
				$(ui).html(data);
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});
		
	}

	function like(post_id, post_type){
		$.ajax({
    		type: "GET",
    		url: serverUrl + '/app/user/' + userId + '/likes/?post_id=' + post_id + '&fanpage_id='+ fanpageId + '&post_type=' + post_type + '&access_token=' + userAccessToken,
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
				//alert("target followed")
				//alert(post_id + 'liked');
    			alert('liked');
    			addActivities('like-'+post_type, post_id );
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});		
	}

	
	function unlike(post_id, post_type){
		$.ajax({
    		type: "GET",
    		url: serverUrl + '/app/user/' + userId + '/unlike/?post_id=' + post_id + '&fanpage_id='+ fanpageId + '&post_type=' + post_type + '&access_token=' + userAccessToken,
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
				//alert("target followed")
				//alert(post_id + 'liked');
    			alert('unliked');
    			addActivities('unlike-'+post_type, post_id );
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});		
	}

	
	function getFancrankfeed(view){
		ui = '#fancrankfeed';
		//alert(baseAppUrl+'/fancrankfeed?fanpage_id='+ fanpageId + '&facebook_user_id=' + userId + '&access_token=' +accessToken + '&viewAs=' +view);
		$.ajax({
			type: "GET",
			url: serverUrl +'/app/app/fancrankfeed/'+ fanpageId + '?viewAs=' +view, 
			dataType: "html",
			cache: false,
			async: false,
			success: function( data ) {
			
				$(ui).html(data);
				
			},	
			error: function( xhr, errorMessage, thrownErro ) {
				console.log(xhr.statusText, errorMessage);
			}
		});
	}
	
    function getTopfans(ui) {
     
    	$.ajax({
    		type: "GET",
    		url: serverUrl +'/app/app/topfans/'+ fanpageId +'?facebook_user_id=' + userId,
    		dataType: "html",
    		cache: false,
    		async: false,
    		success: function( data ) {
    			$(ui).html(data);
    			getLatestPost();
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
        		alert(url);
    			console.log(xhr.statusText, errorMessage);
    			
    		}
    	});
    }
    
    function getMyProfile(ui) {
    	$.ajax({
    		type: "GET",
    		url:  serverUrl +'/app/app/myprofile/'+ fanpageId +'?facebook_user_id=' + userId,
    		dataType: "html",
    		cache: false,
    		async: false,
    		success: function( data ) {
    			$(ui).html(data);
    			getRecentActivities('#recent_activities');
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});
    }

	
    
    function getAwards(ui) {
    	$.ajax({
    		type: "GET",
    		url:  serverUrl +'/app/app/awards/'+ fanpageId +'?facebook_user_id=' + userId,
    		dataType: "html",
    		cache: false,
    		async: false,
    		success: function( data ) {
    			$(ui).html(data);
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});
    }	


	function getRecentActivities(ui){
		$.ajax({
    		type: "GET",
    		url:  serverUrl +'/app/app/recentactivities/' + fanpageId,
    		dataType: "html",
    		cache: false,
    		async: false,
    		success: function( data ) {
    			$(ui).html(data);
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});
	}

    
	function follow(target){
		$.ajax({
    		type: "GET",
    		url: serverUrl +'/app/user/'+ userId + '/follow/?subscribe_to=' + target + '&facebook_user_id=' + userId + '&fanpage_id='+ fanpageId + '&subscribe_ref_id=1',
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
				//alert("target followed")
				getUserProfile('.profile-content', target);
    			
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});
    }	
	
	function unfollow(target){
		$.ajax({
    		type: "GET",
    		url: serverUrl +'/app/user/'+ userId + '/unfollow/?subscribe_to=' + target + '&facebook_user_id=' + userId + '&fanpage_id='+ fanpageId + '&subscribe_ref_id=1',
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
				//alert("target unfollowed")
				getUserProfile('.profile-content', target);
    		
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});
    }	



	function addActivities(act_type, event){
		$.ajax({
    		type: "GET",
    		url: serverUrl +'/app/user/'+ userId + '/addactivity/?activity_type=' + act_type + '&event='+event+ '&fanpage_id=' + fanpageId,
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
    			
    			alert('act saved');
    			//$(ui).html(data);
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});

	}
    
	function colorChange(choice){
		$.ajax({
    		type: "GET",
    		url: serverUrl +'/app/user/'+ userId + '/color/?choice=' + choice + '&fanpage_id=' + fanpageId,
    		dataType: "html",
    		cache: false,
    		success: function( data ) {
    			window.location.reload()
				
    			//$(ui).html(data);
    		},	
    		error: function( xhr, errorMessage, thrownErro ) {
    			console.log(xhr.statusText, errorMessage);
    		}
    	});


	}

	function commentSubmit(postid, message){
		var m = '#'+message;
	
		//alert(userAccessToken);
		FB.api('/'+ postid + '/comments' , 'post' , { 'message': $(m).val() , 'access_token' : userAccessToken},  function(response) {
			if (!response || response.error) {
				alert(response.error.message);
				} else {
				//alert('Post ID: ' + response.id);
				$(m).val('');
					}
				});
	}
	
	function resizeCommentBox(o){
		o.style.height = "1px";
	    o.style.height = (10+o.scrollHeight)+"px";
	}
	
</script>
    
    
    
    
    <script src="text/javascript">
		window.onload = function() {
			  FB.Canvas.setAutoGrow(91);
			  setTimeout('autoGrowTimer();', 1000); //This is for demonstration
			};
		
		function autoGrowTimer() { //Can be removed.
		  paragraphs_added++; //Increase the count
		  autoGrowDiv = document.getElementById('autoGrow');
		  //autoGrowDiv.innerHTML = autoGrowDiv.innerHTML + "<p>This is making the iframe taller.</p>";
		  //Stop after 50 paragraphs aded
		  if (paragraphs_added > 50) return;
		
		  setTimeout('autoGrowTimer();', 1000);
		}
		
	
	</script>

<script >
	
		
		$('#news-feed a').click(function (e) {
		  e.preventDefault();
		  $(this).tab('show');
		})

		$('#fan-favorite a').click(function (e) {
		  e.preventDefault();
		  $(this).tab('show');
		})
		
		$('#profile a').click(function (e) {
		  e.preventDefault();
		  $(this).tab('show');
		})
		
		$('#achievements a').click(function (e) {
		  e.preventDefault();
		  $(this).tab('show');
		})
		
</script>	
		
</html>
